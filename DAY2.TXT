The database for Zen class program can be designed with the following collections:

Users:
user_id (primary key)
name
email
phone_number
role (student/mentor)
Codekata:
user_id (foreign key referencing Users collection)
problem_id (primary key)
problem_name
problem_description
problem_difficulty
date_solved
Attendance:
attendance_id (primary key)
user_id (foreign key referencing Users collection)
date_attended
Topics:
topic_id (primary key)
topic_name
topic_description
Tasks:
task_id (primary key)
task_name
task_description
deadline
Company_drives:
company_drive_id (primary key)
company_name
drive_date
students_appeared (list of user_id)
Mentors:
mentor_id (primary key)
mentor_name
mentee_count



1) To find all the topics and tasks which are taught in the month of October:
db.Topics.aggregate([
    {
        $lookup: {
            from: "Tasks",
            localField: "topic_id",
            foreignField: "topic_id",
            as: "tasks"
        }
    },
    {
        $unwind: "$tasks"
    },
    {
        $match: {
            "tasks.deadline": {
                $gte: ISODate("2020-10-01"),
                $lte: ISODate("2020-10-31")
            }
        }
    },
    {
        $project: {
            _id: 0,
            topic_name: 1,
            task_name: "$tasks.task_name"
        }
    }
])
2) To find all the company drives which appeared between 15 Oct-2020 and 31-Oct-2020:
db.Company_drives.find({
    drive_date: {
        $gte: ISODate("2020-10-15"),
        $lte: ISODate("2020-10-31")
    }
})
3) To find all the company drives and students who appeared for the placement:
db.Company_drives.aggregate([
    {
        $lookup: {
            from: "Users",
            localField: "students_appeared",
            foreignField: "user_id",
            as: "students"
        }
    },
    {
        $project: {
            _id: 0,
            company_drive_id: 1,
            company_name: 1,
            students: "$students.name"
        }
    }
])
4) To find the number of problems solved by the user in Codekata:
db.Codekata.count({
    user_id: "<user_id>"
})
5) To find all the mentors who have a mentee count more than 15:
db.Mentors.find({
    mentee_count: {
        $gt: 15
    }
})
6) Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-202
db.Attendance.aggregate([
    {
        $lookup: {
            from: "Tasks",
            localField: "user_id",
            foreignField: "user_id",
            as: "tasks"
        }
    },
    {
        $match: {
            date_attended: {
                $gte: ISODate("2020-10-15"),
                $lte: ISODate("2020-10-31")
            },
            "tasks.deadline": {
                $lte: ISODate("2020-10-31")
            },
            "tasks.submitted": false
        }
    },
    {
        $group: {
            _id: "$user_id"
        }
    },
    {
        $count: "num_users"
    }
])
